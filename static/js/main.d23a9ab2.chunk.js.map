{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","getMovie","query","fetch","then","res","json","catch","Response","Error","FindMovie","addMovie","useState","setQuery","setMovie","isLoading","setIsLoading","error","setError","loadMovie","event","preventDefault","response","loadedMovie","Title","Plot","Poster","imdbID","onSubmit","htmlFor","type","id","placeholder","value","onChange","target","handleQuery","disabled","classNames","onClick","App","setMovies","newMovie","find","prevMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d23a9ab2.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=14476048';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  addMovie: (newMove: Movie) => void,\n}\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [query, setQuery] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  // eslint-disable-next-line max-len\n  const defaultPoster = 'https://via.placeholder.com/360x270.png?text=no%20preview';\n\n  const handleQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    event.preventDefault();\n    setQuery(event.target.value);\n    setError('');\n  };\n\n  const onAddMovie = (newMovie: Movie) => {\n    addMovie(newMovie);\n    setQuery('');\n    setMovie(null);\n  };\n\n  const loadMovie = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    setIsLoading(true);\n    const response = await getMovie(query);\n\n    setIsLoading(false);\n\n    if ('Error' in response) {\n      setError(response.Error);\n    } else {\n      const loadedMovie: Movie = {\n        title: response.Title,\n        description: response.Plot,\n        imgUrl: response.Poster === 'N/A'\n          ? defaultPoster\n          : response.Poster,\n        imdbId: response.imdbID,\n        imdbUrl: `https://www.imdb.com/title/${response.imdbID}`,\n      };\n\n      setMovie(loadedMovie);\n    }\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={(event) => loadMovie(event)}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={query}\n              onChange={(event) => handleQuery(event)}\n            />\n          </div>\n\n          {error && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              disabled={!query}\n              className={classNames(\n                'button', 'is-light', { 'is-loading': isLoading },\n              )}\n            >\n              {movie\n                ? 'Search again'\n                : 'Find a movie'}\n            </button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={() => onAddMovie(movie)}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (newMovie: Movie) => {\n    if (movies.find(movie => movie.imdbId === newMovie.imdbId)) {\n      return;\n    }\n\n    setMovies((prevMovies) => [\n      ...prevMovies,\n      newMovie,\n    ]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}